{"ast":null,"code":"var e,\n  t = require(\"react\"),\n  r = (e = require(\"invariant\")) && \"object\" == typeof e && \"default\" in e ? e.default : e,\n  n = require(\"react-transition-group\"),\n  a = {\n    scale: {\n      entering: {\n        transform: \"translateX(-50%) scale(1.5)\"\n      },\n      entered: {\n        transform: \"translateX(-50%) scale(1)\"\n      },\n      exiting: {\n        transform: \"translateX(-50%) scale(1.5)\"\n      },\n      exited: {\n        transform: \"translateX(-50%) scale(1)\"\n      }\n    },\n    rotate: {\n      entering: {\n        transform: \"translateX(-50%) rotate(360deg)\"\n      },\n      entered: {\n        transform: \"translateX(-50%) rotate(0deg)\"\n      },\n      exiting: {\n        transform: \"translateX(-50%) rotate(0deg)\"\n      },\n      exited: {\n        transform: \"translateX(-50%) rotate(360deg)\"\n      }\n    },\n    skew: {\n      entering: {\n        transform: \"translateX(-50%) skewX(20deg)\"\n      },\n      entered: {\n        transform: \"translateX(-50%) skewX(0deg)\"\n      },\n      exiting: {\n        transform: \"translateX(-50%) skewX(20deg)\"\n      },\n      exited: {\n        transform: \"translateX(-50%) skewX(0deg)\"\n      }\n    }\n  };\nfunction o(e) {\n  return (e > 100 || e < 0 || \"number\" != typeof e) && console.warn(\"[react-step-progress-bar]: The value passed to percent or position needs to be a number between 0 and 100 (passed value: \" + e + \").\"), Math.min(100, Math.max(e, 0));\n}\nvar i = function (e) {\n    function i() {\n      e.apply(this, arguments);\n    }\n    return e && (i.__proto__ = e), (i.prototype = Object.create(e && e.prototype)).constructor = i, i.prototype.render = function () {\n      var e = this.props,\n        i = e.accomplished,\n        s = e.index,\n        l = e.children,\n        c = e.transition;\n      void 0 === c && (c = null);\n      var d = e.transitionDuration;\n      void 0 === d && (d = 300);\n      var p = o(e.position),\n        u = {\n          left: p + \"%\",\n          transitionDuration: d + \"ms\"\n        };\n      return t.createElement(n.Transition, {\n        in: i,\n        timeout: d\n      }, function (e) {\n        return c && (r(null != a[c], c + \" is not listed in the built-in transitions.\"), u = Object.assign({}, u, a[c][e])), t.createElement(\"div\", {\n          className: \"RSPBstep\",\n          style: u\n        }, l({\n          accomplished: i,\n          position: p,\n          transitionState: e,\n          index: s\n        }));\n      });\n    }, i;\n  }(t.Component),\n  s = function (e) {\n    function n() {\n      e.apply(this, arguments);\n    }\n    return e && (n.__proto__ = e), (n.prototype = Object.create(e && e.prototype)).constructor = n, n.prototype.render = function () {\n      var e = this.props,\n        n = e.percent,\n        a = e.children,\n        i = e.stepPositions;\n      void 0 === i && (i = []);\n      var s = e.unfilledBackground;\n      void 0 === s && (s = null);\n      var l = e.filledBackground;\n      void 0 === l && (l = null);\n      var c = e.width;\n      void 0 === c && (c = null);\n      var d = e.height;\n      void 0 === d && (d = null);\n      var p = e.hasStepZero;\n      void 0 === p && (p = !0);\n      var u = e.text;\n      void 0 === u && (u = null), r(!(i.length > 0 && i.length !== t.Children.count(a)), \"When specifying a stepPositions props, the number of children must match the length of the positions array.\");\n      var m = o(n);\n      return t.createElement(\"div\", {\n        className: \"RSPBprogressBar\",\n        style: {\n          background: s,\n          width: c,\n          height: d\n        }\n      }, t.Children.map(a, function (e, r) {\n        var n = i.length > 0 ? i[r] : function (e, t, r) {\n          return r ? 100 / (e - 1) * t : 100 / e * (t + 1);\n        }(t.Children.count(a), r, p);\n        return t.cloneElement(e, {\n          accomplished: n <= m,\n          position: n,\n          index: r\n        });\n      }), u ? t.createElement(\"div\", {\n        className: \"RSPBprogressBarText\"\n      }, u) : null, t.createElement(\"div\", {\n        className: \"RSPBprogression\",\n        style: {\n          background: l,\n          width: m + \"%\"\n        }\n      }));\n    }, n;\n  }(t.Component);\nexports.ProgressBar = s, exports.Step = i;","map":{"version":3,"names":["a","scale","entering","transform","entered","exiting","exited","rotate","skew","o","e","console","warn","Math","min","max","i","apply","arguments","__proto__","prototype","Object","create","constructor","render","props","accomplished","s","index","l","children","c","transition","d","transitionDuration","p","position","u","left","t","createElement","n","Transition","in","timeout","r","assign","className","style","transitionState","Component","percent","stepPositions","unfilledBackground","filledBackground","width","height","hasStepZero","text","length","Children","count","m","background","map","cloneElement","exports","ProgressBar","Step"],"sources":["E:\\SKINALYZE\\skinalyze-frontend\\node_modules\\react-step-progress-bar\\src\\components\\step\\transitions.js"],"sourcesContent":["export const transitions = {\n  scale: {\n    entering: { transform: 'translateX(-50%) scale(1.5)' },\n    entered: { transform: 'translateX(-50%) scale(1)' },\n    exiting: { transform: 'translateX(-50%) scale(1.5)' },\n    exited: { transform: 'translateX(-50%) scale(1)' },\n  },\n  rotate: {\n    entering: { transform: 'translateX(-50%) rotate(360deg)' },\n    entered: { transform: 'translateX(-50%) rotate(0deg)' },\n    exiting: { transform: 'translateX(-50%) rotate(0deg)' },\n    exited: { transform: 'translateX(-50%) rotate(360deg)' },\n  },\n  skew: {\n    entering: { transform: 'translateX(-50%) skewX(20deg)' },\n    entered: { transform: 'translateX(-50%) skewX(0deg)' },\n    exiting: { transform: 'translateX(-50%) skewX(20deg)' },\n    exited: { transform: 'translateX(-50%) skewX(0deg)' },\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}